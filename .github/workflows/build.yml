name: Build V8

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  release:
    types: [published]

# github.head_ref is only defined on pull_request events
concurrency:
  group: ${{ github.workflow }}-${{ github.actor }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_android:
    strategy:
      fail-fast: false
      matrix:
        arch: [arm64]

    name: "android"
    # runs-on: ubuntu-latest
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Clean up before build
        run: |
           sudo rm -rf /tmp/*
           sudo rm -rf /var/tmp/*
           
      - name: Install NDK r21e
        uses: nttld/setup-ndk@v1
        id: setup-ndk-r21e
        with:
          ndk-version: r21e
          add-to-path: false
          local-cache: true

      - name: Install NDK r26
        uses: nttld/setup-ndk@v1
        id: setup-ndk-r26
        with:
          ndk-version: r26
          add-to-path: false
          local-cache: true

      - name: Clone DepotTools
        run: |
            cd ..
            DEPOT_TOOLS_PATH=$(pwd)/depot_tools
            git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
            echo "DEPOT_TOOLS_PATH=$DEPOT_TOOLS_PATH" >> $GITHUB_ENV
            echo "DEPOT_TOOLS_PATH=$DEPOT_TOOLS_PATH"

      - name: Print env
        run: |
          echo "${{ env.DEPOT_TOOLS_PATH }}"
          ls -l ${{ env.DEPOT_TOOLS_PATH }}

      - name: Install gn
        run: |
          wget https://chrome-infra-packages.appspot.com/dl/gn/gn/linux-amd64/+/latest -O ./gn.zip
          unzip gn.zip -d buildtools/linux64/

      - name: Install ninja
        run: |
          if ! command -v ninja &> /dev/null; then
              echo "Ninja not found, installing..."
              # sudo apt update
              sudo apt install ninja-build
          else
              echo "Ninja is already installed."
          fi
          which ninja
          NINJA_PATH=$(which ninja)
          CURRENT_DIR=$(pwd)
          mkdir -p ${CURRENT_DIR}/third_party/ninja
          ln -s ${NINJA_PATH} ${CURRENT_DIR}/third_party/ninja/ninja

      - name: Install linux sysroot
        run: |
          if [[ "${{ matrix.arch }}" == "arm64" || "${{ matrix.arch }}" == "x64" ]];then
            INSTALL_SYSROOT_ARCH="amd64"
          else
            INSTALL_SYSROOT_ARCH="i386"
          fi

          python3 build/linux/sysroot_scripts/install-sysroot.py --arch=${INSTALL_SYSROOT_ARCH}

      - name: Build ${{ matrix.arch }}
        run: |
          export PATH=${{ env.DEPOT_TOOLS_PATH }}:$PATH
          which gn
          CURRENT_DIR=$(pwd)
          
          ./build-android.sh ${{ matrix.arch }}
        env:
          NDK_ROOT_R21: ${{ steps.setup-ndk-r21e.outputs.ndk-path }}
          NDK_ROOT_R26: ${{ steps.setup-ndk-r26.outputs.ndk-path }}

      - name: Copy to dist folder
        run: |
          ls -l ./out/android
          echo "---------------------"
          ls -l ./out/android/obj
          mkdir dist
          cp ./out/android/d8 ./dist/
          cp ./out/android/obj/libv8_monolith.a ./dist/
          cp -r ./include ./dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: v8-android-${{ matrix.arch }}
          path: ./dist

  build_android_fat:
    permissions:
      contents: write
    if: github.event_name == 'release'
    name: "android (fat)"
    runs-on: ubuntu-latest
    needs: build_android
    steps:
      - name: Download arm64 artifact
        uses: actions/download-artifact@v3
        with:
          name: v8-android-arm64
          path: v8-android-arm64

      - name: Build a fat library
        run: |
          mkdir v8-android-fat
          cp -r ./v8-android-arm64 ./v8-android-fat/arm64-v8a
          cp -r ./v8-android-arm64/include ./v8-android-fat/
          rm -rf ./v8-android-fat/arm64-v8a/include

      - name: Pack dist files
        uses: thedoctor0/zip-release@a24011d8d445e4da5935a7e73c1f98e22a439464
        with:
          type: 'zip'
          directory: 'v8-android-fat'
          path: '.'
          filename: 'v8-android.zip'

      - name: Upload to Release
        uses: svenstaro/upload-release-action@e74ff71f7d8a4c4745b560a485cc5fdb9b5b999d
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: v8-android-fat/v8-android.zip
          asset_name: v8-android.zip
          tag: ${{ github.ref }}
